omegaasfac_specialist = {
    category = specialist
    condition_string = SPECIALIST_JOB_TRIGGER
    building_icon = building_omega_assembly_center
    clothes_texture_index = 3
    possible_precalc = can_fill_specialist_job
    possible_pre_triggers = {
        has_owner = yes
        is_being_purged = no
        is_being_assimilated = no
        is_sapient = yes
    }
    possible = {
        complex_specialist_job_check_trigger = yes
    }
    planet_modifier = {
        planet_pop_assembly_add = 10
    }
    resources = {
        category = planet_doctors
        produces = {
            society_research = 15
            engineering_research = 15
            unity = 5
        }
        upkeep = {
            consumer_goods = 10
            energy = 5
            alloys = 5
            exotic_gases = 1
        }
        upkeep = {
            trigger = {
                exists = owner
                owner = {
                    is_lithoid_empire = no
                }
            }
            food = 100
        }
        upkeep = {
            trigger = {
                exists = owner
                owner = {
                    is_lithoid_empire = yes
                }
            }
            minerals = 100
        }
    }
    weight = {
        weight = @spawner_drone_job_weight
        modifier = {
            factor = 0.2
            has_citizenship_rights = no
            NOT = {
                has_trait = trait_mechanical
            }
        }
        modifier = {
            factor = 1.5
            OR = {
                has_trait = trait_robot_domestic_protocols
                has_trait = trait_charismatic
            }
        }
        modifier = {
            factor = 0.5
            has_trait = trait_repugnant
        }
        modifier = {
            factor = 0.1
            can_take_servant_job = yes
        }
        modifier = {
            factor = 1.5
            has_job = healthcare
        }
        modifier = {
            factor = 0.5
            is_enslaved = yes
            has_slavery_type = {
                type = slavery_indentured
            }
        }
    }
}
